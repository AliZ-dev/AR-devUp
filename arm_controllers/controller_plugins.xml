<library path="lib/libarm_controllers">

  <class name="arm_controllers/TimeDelayController" type="arm_controllers::TimeDelayController" base_class_type="controller_interface::ControllerBase">
    <description>
	    Time Delay Controller
    </description>
  </class>

  <class name="arm_controllers/GravityCompController" type="arm_controllers::GravityCompController" base_class_type="controller_interface::ControllerBase">
    <description>
	    Gravity Compensation Controller
    </description>
  </class>

  <class name="arm_controllers/Computed_Torque_Controller" type="arm_controllers::Computed_Torque_Controller" base_class_type="controller_interface::ControllerBase">
    <description>
	    Computed Torque Controller
    </description>
  </class>

  <class name="arm_controllers/Custom_Torque_Controller" type="arm_controllers::Custom_Torque_Controller" base_class_type="controller_interface::ControllerBase">
    <description>
	    Custom Torque Controller
    </description>
  </class>

  <class name="arm_controllers/Computed_Torque_CLIK_Controller" type="arm_controllers::Computed_Torque_CLIK_Controller" base_class_type="controller_interface::ControllerBase">
    <description>
	    Computed Torque Controller with Closed Loop Inverse Kinematics
    </description>
  </class>

  <class name="arm_controllers/Task_Space_Controller" type="arm_controllers::Task_Space_Controller" base_class_type="controller_interface::ControllerBase">
    <description>
	    Inverse dynamics task space controller
    </description>
  </class>

  <class name="arm_controllers/Visual_Servo_Controller" type="arm_controllers::Visual_Servo_Controller" base_class_type="controller_interface::ControllerBase">
    <description>
	    Visual servoing controller
    </description>
  </class>

  <class name="arm_controllers/AdaptiveImpedanceController" type="arm_controllers::AdaptiveImpedanceController" base_class_type="controller_interface::ControllerBase">
    <description>
	    Adaptive Impedance Controller
    </description>
  </class>

  <class name="arm_controllers/PassivityController" type="arm_controllers::PassivityController" base_class_type="controller_interface::ControllerBase">
    <description>
      Passivity Based Controller
    </description>
  </class>
</library>

